package com.payease.scfordermis.service.impl;

import com.payease.scfordermis.bo.ResultBo;
import com.payease.scfordermis.bo.requestBo.ReqSaveDepSetBean;
import com.payease.scfordermis.bo.responseBo.RespDepSetListBean;
import com.payease.scfordermis.dao.DepartmentInfoDao;
import com.payease.scfordermis.entity.TDepartmentInfoEntity;
import com.payease.scfordermis.service.DepSetService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * 首页-设置-部门设置
 * @Created By liuxiaoming
 * @CreateTime 2018/1/17 下午2:22
 **/
@Service
public class DepSetServiceImpl implements DepSetService {

    @Autowired
    private DepartmentInfoDao departmentInfoDao;
    /**
     * 部门列表接口
     * @param session
     * @return
     */
    @Override
    public ResultBo deplist(HttpSession session) {
        ResultBo result = ResultBo.build();

        Long fCompanyId = Long.valueOf("1");
        //todo   Long fCompanyId
//        Long fCompanyId = (Long) session.getAttribute("fCompanyId");
//        if(session.getAttribute("fCompanyId") == null){
//            return result.fail();
//        }
        //一级部门集合
        List<TDepartmentInfoEntity> depOneList = departmentInfoDao.findByFLevelAndFCompanyId("1", fCompanyId);
        //二级部门集合
        List<TDepartmentInfoEntity> depTwoList = departmentInfoDao.findByFLevelAndFCompanyId("2",fCompanyId);

        //总集合
        List<RespDepSetListBean> FUlist = new ArrayList<>();
        //循环一级部门集合
        for (TDepartmentInfoEntity one : depOneList){

            List<RespDepSetListBean> ZIlist = new ArrayList<>();
            //循环二级部门集合
            for (TDepartmentInfoEntity two : depTwoList){
                //找到一级部门的子集合
                if(two.getfParentId() == one.getfId()){
                    RespDepSetListBean resp2 = new RespDepSetListBean();
                    resp2.setfId(two.getfId());
                    resp2.setfName(two.getfName());
                    resp2.setfParentId(two.getfParentId());
                    //将二级部门放入子集合
                    ZIlist.add(resp2);
                }
            }

            RespDepSetListBean resp1 = new RespDepSetListBean();
            resp1.setfId(one.getfId());
            resp1.setfName(one.getfName());
            resp1.setfParentId(one.getfParentId());
            resp1.setChildList(ZIlist);
            //将一级部门放入父集合
            FUlist.add(resp1);
        }
        result.setResultBody(FUlist);

        return result;
    }
    /**
     * 新增修改接口
     *  @ApiModelProperty(value = "主键ID（新增：ID非必填 修改：ID必填）",dataType = "long")
            private Long fId;
        @ApiModelProperty(value = "上级部门ID（新增父节点：ParentId非必填 新增子节点：ParentId必填）",dataType = "long")
            private Long fParentId;
        @ApiModelProperty(value = "部门名称",dataType = "string",required = true)
            private String depName;
     * @param session
     * @return
     */
    @Override
    public ResultBo save(HttpSession session, ReqSaveDepSetBean req) {
        ResultBo result = ResultBo.build();
        Long fCompanyId = Long.valueOf("1");
        //todo   Long fCompanyId
//        Long fCompanyId = (Long) session.getAttribute("fCompanyId");
//        if(session.getAttribute("fCompanyId") == null){
//            return result.fail();
//        }
        Long sessionId = Long.valueOf("1");
        //todo   Long sessionId
//        if(session.getAttribute("fId") == null){
//            return result.fail();
//        }

        TDepartmentInfoEntity entity = new TDepartmentInfoEntity();
        if(req == null){return result.fail();}
        if(req.getfId() != null){
            //修改
            entity = departmentInfoDao.findOne(req.getfId());
        }else{
            //新增
            if(req.getfParentId() != null && req.getfParentId() == 0){
                //新增父节点
                entity.setfLevel("1");
            }else{
                //新增子节点
                entity.setfLevel("2");
            }
            entity.setfCreate(sessionId);//创建人
            entity.setfCreateTime(new Date());//新增时间
            if(req.getfParentId()!=null){
                entity.setfParentId(req.getfParentId());
            }
        }
        entity.setfUpdateTime(new Date()); //修改时间
        entity.setfName(req.getDepName());//部门名称
        entity.setfOperate(sessionId);//操作人
        entity.setfCompanyId(fCompanyId);//公司ID
        departmentInfoDao.save(entity);

        return result;
    }
    /**
     * 删除接口
     * @param session
     * @return
     */
    @Override
    public ResultBo delete(HttpSession session, Long depId) {
        ResultBo result = ResultBo.build();

        if(depId == null){return result.fail();}

        TDepartmentInfoEntity one = departmentInfoDao.findOne(depId);

        if(one == null){return  result.fail();}


        //查看该部门是几级部门
        if(one.getfLevel().equals("1")){
            //一级部门：查看该部门是否含有子部门
            if(departmentInfoDao.countByFParentId(one.getfId()) != 0){
                //该部门含有子部门
                return result.fail();
            }
        }
        departmentInfoDao.delete(one);

        return result;
    }
}
