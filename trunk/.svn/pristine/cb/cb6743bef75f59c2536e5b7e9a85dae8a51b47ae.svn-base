package com.payease.scfordermis.controller;

import com.payease.scfordermis.bo.ResultBo;
import com.payease.scfordermis.bo.requestBo.ReqEmpAccNumBean;
import com.payease.scfordermis.bo.requestBo.ReqEmpSave;
import com.payease.scfordermis.bo.responseBo.RespEmpDetailBean;
import com.payease.scfordermis.bo.responseBo.RespEmpListBean;
import com.payease.scfordermis.bo.responseBo.RespEmpRoleInfoBean;
import com.payease.scfordermis.bo.responseBo.RespEmpAccNumBean;
import com.payease.scfordermis.entity.TEmployeeInfoEntity;
import com.payease.scfordermis.entity.TRoleInfoEntity;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.BeanUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.List;

/**
 * @Created By liuxiaoming
 * @CreateTime 2018/1/10 上午10:24
 **/
@RestController
@RequestMapping("/empaccnum")
@Api(tags = {"员工账号类"})
public class EmpAccNumController {
    private static final Logger log = LoggerFactory.getLogger(EmpAccNumController.class);


    @GetMapping(value = "emplist")
    @ApiOperation(value = "员工列表查询",response = RespEmpListBean.class)
    public ResultBo emplist(HttpSession session, ReqEmpAccNumBean reqEmpAccNumBean) {
        ResultBo result = ResultBo.build();


        RespEmpListBean entity = new RespEmpListBean();
        List<RespEmpAccNumBean> list = new ArrayList<>();
        TEmployeeInfoEntity tEmployeeInfoEntity1 = new TEmployeeInfoEntity();
        RespEmpAccNumBean respEmpAccNumBean = new RespEmpAccNumBean();
        tEmployeeInfoEntity1.setfId(1);
        tEmployeeInfoEntity1.setfAccount("zhangsanacc");
        tEmployeeInfoEntity1.setfName("zhangsan");
        tEmployeeInfoEntity1.setfPosition("业务经理");
        tEmployeeInfoEntity1.setfDepartIdTwo(1);
        tEmployeeInfoEntity1.setfMobile("18920736652");
        tEmployeeInfoEntity1.setfEmail("404812357@qq.com");
        tEmployeeInfoEntity1.setfStatus("open");
        BeanUtils.copyProperties(tEmployeeInfoEntity1,respEmpAccNumBean);
        list.add(respEmpAccNumBean);

        entity.setList(list);
        entity.setNumber(1);
        entity.setSize(5);
        entity.setTotalElements(1);
        entity.setTotalPages(1);
        result.setResultBody(entity);

        return result;
    }


    @GetMapping(value = "empdetail")
    @ApiOperation(value = "员工详情",response = RespEmpDetailBean.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "employeeInfoId",value = "员工ID",paramType = "query",required = true),
    })
    public ResultBo empdetail(HttpSession session, Long employeeInfoId) {
        ResultBo result = ResultBo.build();

        RespEmpDetailBean entity = new RespEmpDetailBean();
        TEmployeeInfoEntity tEmployeeInfoEntity1 = new TEmployeeInfoEntity();
        tEmployeeInfoEntity1.setfId(employeeInfoId);
        tEmployeeInfoEntity1.setfAccount("zhangsanacc");
        tEmployeeInfoEntity1.setfName("zhangsan");
        tEmployeeInfoEntity1.setfPosition("业务经理");
        tEmployeeInfoEntity1.setfDepartIdTwo(1);
        tEmployeeInfoEntity1.setfMobile("18920736652");
        tEmployeeInfoEntity1.setfEmail("404812357@qq.com");
        tEmployeeInfoEntity1.setfStatus("open");
        tEmployeeInfoEntity1.setfQq("404812357");
        BeanUtils.copyProperties(tEmployeeInfoEntity1,entity);
        result.setResultBody(entity);

        return result;
    }



    @GetMapping(value = "save")
    @ApiOperation(value = "添加修改",response = ResultBo.class)
    public ResultBo save(HttpSession session, ReqEmpSave reqEmpSave) {
        ResultBo result = ResultBo.build();
        return result;
    }



    @GetMapping(value = "delete")
    @ApiOperation(value = "删除",response = ResultBo.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "employeeInfoId",value = "员工ID",paramType = "query",required = true),
    })
    public ResultBo delete(HttpSession session, Long employeeInfoId) {
        ResultBo result = ResultBo.build();
        return result;
    }

    @GetMapping(value = "resetpwd")
    @ApiOperation(value = "重置密码",response = ResultBo.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "employeeInfoId",value = "员工ID",paramType = "query",required = true),
    })
    public ResultBo resetpwd(HttpSession session, Long employeeInfoId) {
        ResultBo result = ResultBo.build();
        return result;
    }

    //权限设置列表（对应页面中的权限列表）
    @GetMapping(value = "authlist")
    @ApiOperation(value = "角色列表",response = ResultBo.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "employeeInfoId",value = "员工ID",paramType = "query",required = true),
    })
    public ResultBo authlist(HttpSession session, Long employeeInfoId) {
        ResultBo result = ResultBo.build();
        List<RespEmpRoleInfoBean> list = new ArrayList<>();

        TRoleInfoEntity entity1 = new TRoleInfoEntity();
        RespEmpRoleInfoBean b1 = new RespEmpRoleInfoBean();
        entity1.setfId(1);
        entity1.setfName("系统管理员");
        BeanUtils.copyProperties(entity1,b1);

        TRoleInfoEntity entity2 = new TRoleInfoEntity();
        RespEmpRoleInfoBean b2 = new RespEmpRoleInfoBean();
        entity2.setfId(2);
        entity2.setfName("业务负责人");
        BeanUtils.copyProperties(entity2,b2);

        list.add(b1);
        list.add(b2);
        result.setResultBody(list);
        return result;
    }


}
