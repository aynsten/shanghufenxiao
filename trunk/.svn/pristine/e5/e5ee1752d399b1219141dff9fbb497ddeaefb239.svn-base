package com.payease.scfordermis.service.impl;

import com.payease.scfordermis.bo.requestBo.ReqCustomerBean;
import com.payease.scfordermis.bo.responseBo.RespCustomerBean;
import com.payease.scfordermis.bo.responseBo.RespEmpCustomerBean;
import com.payease.scfordermis.dao.AreaInfoDao;
import com.payease.scfordermis.dao.CustomerDao;
import com.payease.scfordermis.entity.TAreaInfoEntity;
import com.payease.scfordermis.entity.TConsumerInfoEntity;
import com.payease.scfordermis.service.CustomerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import javax.persistence.EntityManager;
import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Created by admin on 2018/1/10.
 */
@Service
public class CustomerServiceImpl  implements CustomerService{

    @Autowired
    EntityManager em;

    @Autowired
    private  CustomerDao cusromerDao;

    @Autowired
    private  AreaInfoDao   areaInfoDao;

    /**
     * 客户管理获取首页信息
     * @param
     * @return
     */
    @Override
    public RespCustomerBean selectIndext(ReqCustomerBean reqCustomerBean) {
        int stays = Integer.valueOf(reqCustomerBean.getAreaParentId());
        int start =(reqCustomerBean.getPage() -1)*reqCustomerBean.getSize();
        StringBuffer sql = new StringBuffer("SELECT *  FROM  t_consumer_info ");
            sql.append(this.FightString(stays,reqCustomerBean));
            sql.append("limit "+start+","+reqCustomerBean.getSize());
        StringBuffer sqlCount = new StringBuffer("SELECT count(*)  FROM  t_consumer_info ");
            sqlCount.append(this.FightString(stays,reqCustomerBean));
        Object o =  em.createNativeQuery(sqlCount.toString()).getSingleResult();
        int totalCount = Integer.valueOf(o.toString()).intValue();//总条数
        int t1 = totalCount/reqCustomerBean.getSize();//总页数
        if( totalCount%reqCustomerBean.getSize()>0){
            t1 = t1+1;
        }
        RespCustomerBean respCustomerBean = new RespCustomerBean();
        List<TConsumerInfoEntity> TconList = em.createNativeQuery(sql.toString(),TConsumerInfoEntity.class).getResultList();
        List<RespEmpCustomerBean> respCuList = new ArrayList<>();
        for (TConsumerInfoEntity Tci:TconList) {
            RespEmpCustomerBean resp = new RespEmpCustomerBean();
            resp.setfId(Tci.getfId());//id
            resp.setfCode(Tci.getfCode());//客户编码
            resp.setfName(Tci.getfName());//客户名称
            resp.setCodeName(Tci.getfIndentNo());//登陆账号
            TAreaInfoEntity tar =areaInfoDao.findOne(Long.valueOf(reqCustomerBean.getAreaId()));
            TAreaInfoEntity tar1 =areaInfoDao.findOne(Long.valueOf(reqCustomerBean.getAreaParentId()));
            resp.setfAreaIdOneAndTwo(tar1.getfName()+tar.getfName());//销售地区  1级地区+2级地区 名称
            resp.setfContact(Tci.getfContact());//联系人
            resp.setfPhone(Tci.getfPhone());//联系电话
            resp.setfIndentStatus(Tci.getfIndentStatus());
            respCuList.add(resp);
            List<Object> mycuList = new ArrayList<>(respCuList);
            respCustomerBean.setList(mycuList);
            respCustomerBean.setNumber(reqCustomerBean.getPage());
            respCustomerBean.setSize(reqCustomerBean.getSize());
            respCustomerBean.setTotalElements(totalCount);
            respCustomerBean.setTotalPages(t1);
        }
        return respCustomerBean;
    }

      public  StringBuffer  FightString(int stays,ReqCustomerBean reqCustomerBean){
          //表示入参没有父id，入参地区选择的是大地区
          StringBuffer myCount  = new StringBuffer("");
          if (stays==0){
              myCount.append("where f_area_id_one = "+ reqCustomerBean.getAreaParentId()+" ");
          }else {
              myCount.append("where f_area_id_two = "+reqCustomerBean.getAreaId()+" ");
          }
          if (reqCustomerBean.getLevel()!=null  || !reqCustomerBean.getLevel().isEmpty()){
              myCount.append("and  f_level_id ="+ reqCustomerBean.getLevel()+" ");
          }
          if (reqCustomerBean.getQueryConditions()!=null || !reqCustomerBean.getQueryConditions().isEmpty()){
              myCount.append("and  f_search_key  like '%"+reqCustomerBean.getQueryConditions()+"%'  ");
          }
          return myCount;
      }

    /**
     * 删除客户（假删除）
     * @param
     * @return
     */
    @Override
    public void  isDelete(long fid){
        String fIsDelete ="yes";
        TConsumerInfoEntity tConsumerInfoEntity = cusromerDao.findOne(fid);
        tConsumerInfoEntity.setfIndentStatus(fIsDelete);
        tConsumerInfoEntity.setfUpdateTime(new Date());
        cusromerDao.save(tConsumerInfoEntity);
    }
    /**
     * 获取客户详情
     * @param
     * @return
     */
    @Override
    public TConsumerInfoEntity  getDetail(long fid){
        TConsumerInfoEntity  consumerFo =    cusromerDao.findOne(fid);
         return consumerFo;
    }
    /**
     * 添加和修改
     * @param
     * @return
     */
    @Override
    public  void  upAndSave(HttpSession session,TConsumerInfoEntity tConsumerInfoEntity){
        //添加搜索条件
        tConsumerInfoEntity.setfSearchKey(
                   tConsumerInfoEntity.getfName().toString()
                +tConsumerInfoEntity.getfCode().toString()
                +tConsumerInfoEntity.getfIndentNo().toString()
                +tConsumerInfoEntity.getfContact().toString()
                +tConsumerInfoEntity.getfPhone());
        //tConsumerInfoEntity.setfOperate((long)session.getAttribute("fId"));
        //tConsumerInfoEntity.setfCompanyId((long) session.getAttribute("fCompanyId"));
        //修改操作
        if (0!=tConsumerInfoEntity.getfId()){
            tConsumerInfoEntity.setfUpdateTime(new Date());
            cusromerDao.save(tConsumerInfoEntity);
        }else { //新增操作
            tConsumerInfoEntity.setfIsDelete("no");
            tConsumerInfoEntity.setfCreateTime(new Date());
            tConsumerInfoEntity.setfIndentStatus("open");
            tConsumerInfoEntity.setfIndentNo(tConsumerInfoEntity.getfPhone());
            cusromerDao.save(tConsumerInfoEntity);
        }

    }

}

