package com.payease.scfordermis.controller;

import com.payease.scfordermis.bo.ResultBo;
import com.payease.scfordermis.bo.requestBo.PageBean;
import com.payease.scfordermis.bo.requestBo.ReqCustomerBean;
import com.payease.scfordermis.bo.requestBo.ReqEmpCustomerBean;
import com.payease.scfordermis.bo.responseBo.RespCustomerBean;
import com.payease.scfordermis.bo.responseBo.RespEmpCustomerBean;
import com.payease.scfordermis.bo.responseBo.RespLevelBean;
import com.payease.scfordermis.service.CustomerService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpSession;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by admin on 2018/1/10.
 */
@RestController
@RequestMapping("/customer")
@Api(tags = {"客户管理"})
public class CustomerController {
    private static final Logger log = LoggerFactory.getLogger(CustomerController.class);

    @Autowired
    private   CustomerService  customerService;

    @GetMapping(value = "index")
    @ApiOperation(value = "获取所有客户信息",response = RespEmpCustomerBean.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "level",value = "客户级别",paramType = "query"),
            @ApiImplicitParam(name = "area",value = "全部地区",paramType = "query"),
            @ApiImplicitParam(name = "queryConditions",value = "客户名称/编码/订货号/联系人/手机",paramType = "query"),
            @ApiImplicitParam(name = "number",value = "页码",paramType = "query"),
            @ApiImplicitParam(name = "size",value = "每页显示条数",paramType = "query")
    })
    public ResultBo getCustomerAll(HttpSession session,ReqCustomerBean ReqCustomerBean) {
        ResultBo result = ResultBo.build();
        RespEmpCustomerBean respEmpCustomerBean = new RespEmpCustomerBean();
        List<RespEmpCustomerBean> cusList  = new ArrayList<>();
        respEmpCustomerBean.setfId("1");
        respEmpCustomerBean.setCodeName("zhangsan123");
        respEmpCustomerBean.setfAreaIdOneAndTwo("天津塘沽");
        respEmpCustomerBean.setfCode("00001");
        respEmpCustomerBean.setfContact("张三");
        respEmpCustomerBean.setfPhone("1337640612");
        respEmpCustomerBean.setfName("东盟水果");
        cusList.add(respEmpCustomerBean);
        RespCustomerBean respCustomerBean = new RespCustomerBean();
        List<Object> mycuList = new ArrayList<>(cusList);
        respCustomerBean.setList(mycuList);
        respCustomerBean.setNumber(1);
        respCustomerBean.setSize(5);
        respCustomerBean.setTotalElements(1);
        respCustomerBean.setTotalPages(1);
        result.setResultBody(respCustomerBean);
        return result;
    }

    @GetMapping(value = "delete")
    @ApiOperation(value = "客户删除接口")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "fid",value = "客户id",paramType = "query"),
    })
    public ResultBo deleteCustomerA(String fid) {
        ResultBo result = ResultBo.build();
        if (fid.isEmpty()){
            result.setResultBody("id不能为空");
        }else {
            result.setResultBody("删除成功");
        }
            return result;
    }

    @GetMapping(value = "CustomerLevel")
    @ApiOperation(value = "获取客户级别接口",response = RespEmpCustomerBean.class)
    @ApiImplicitParams({
    })
    public ResultBo getLevelAll() {
        ResultBo result = ResultBo.build();
        List<Object> mycuList = new ArrayList<>();
        mycuList.add("一级经销商");
        mycuList.add("二级经销商");
        mycuList.add("三级经销商");
        mycuList.add("普通经销商");
        result.setResultBody(mycuList);
        return result;
    }

    @GetMapping(value = "Details")
    @ApiOperation(value = "获取客户详情",response = RespEmpCustomerBean.class)
    @ApiImplicitParams({
            @ApiImplicitParam(name = "fid",value = "客户id",paramType = "query"),
    })
    public ResultBo getDetails(String fid) {
        ResultBo result = ResultBo.build();
        RespEmpCustomerBean respEmpCustomerBean = new RespEmpCustomerBean();
        respEmpCustomerBean.setfId("1");
        respEmpCustomerBean.setfName("张三");
        respEmpCustomerBean.setfCode("00001");
        respEmpCustomerBean.setCodeName("zhangsan123");
        respEmpCustomerBean.setfAreaIdOneAndTwo("天津塘沽");
        respEmpCustomerBean.setfContact("李四");
        respEmpCustomerBean.setfPhone("13888888888");
        result.setResultBody(respEmpCustomerBean);
        return result;
    }

    @GetMapping(value = "upsave")
    @ApiOperation(value = "添加修改客户信息接口",response = RespEmpCustomerBean.class)
    @ApiImplicitParams({
    })
    public ResultBo getDetails(ReqEmpCustomerBean reqEmpCustomerBean) {
        ResultBo result = ResultBo.build();
        customerService.saveas(reqEmpCustomerBean);
        result.setResultBody("保存成功");
        return result;
    }

    @GetMapping(value = "resetPassword")
    @ApiOperation(value = "重置客户账号的密码")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "findentno",value = "客户账号",paramType = "query"),
            @ApiImplicitParam(name = "findpassword",value = "客户密码",paramType = "query"),
    })
    public ResultBo resetPassword(String findentno,String findpassword) {
        ResultBo result = ResultBo.build();
        result.setResultBody("重置密码成功");
        return result;
    }
}
